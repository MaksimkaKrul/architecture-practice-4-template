name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Compose
      uses: docker/setup-compose-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build all services
      run: docker-compose -f docker-compose.yaml build

    - name: Run unit tests
      run: |
        docker-compose -f docker-compose.yaml run server1 go test -v ./...
        docker-compose -f docker-compose.yaml run server2 go test -v ./...
        docker-compose -f docker-compose.yaml run server3 go test -v ./...

    - name: Run integration tests
      run: |
        docker-compose -f docker-compose.test.yaml up --build --abort-on-container-exit

    - name: Verify versions
      run: |
        docker --version
        docker-compose --version
        go version