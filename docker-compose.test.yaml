services:
  db:
    build:
      context: .
      dockerfile: Dockerfile
      target: db
    networks:
      - testnet
    ports:
      - "8091:8080"
    volumes:
      - ./data/db-test:/data/db
    healthcheck:
      test: ["CMD", "wget", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 5

  balancer:
    build:
      context: .
      dockerfile: Dockerfile
      target: lb
    ports:
      - "8090:8090"
    environment:
      - INTEGRATION_TEST=true
    depends_on:
      server1:
        condition: service_healthy
      server2:
        condition: service_healthy
      server3:
        condition: service_healthy
    networks:
      - testnet

  server1:
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    environment:
      - SERVER_NAME=server1
      - DB_SERVICE_URL=http://db:8080
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - testnet

  server2:
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    environment:
      - SERVER_NAME=server2
      - DB_SERVICE_URL=http://db:8080
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - testnet

  server3:
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    environment:
      - SERVER_NAME=server3
      - DB_SERVICE_URL=http://db:8080
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - testnet

  integration-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - balancer
      - db
    environment:
      - INTEGRATION_TEST=1
      - TEAM_NAME=team-go
    networks:
      - testnet

networks:
  testnet:
    driver: bridge